kind: DeploymentConfig
apiVersion: v1
metadata:
  name: {{ $.Values.gitlab_app_name }} 
  labels:
    app: {{ $.Values.gitlab_app_name }}
spec:
  strategy:
    type: Recreate
    recreateParams:
      pre:
        failurePolicy: Retry
          command:
          - bash
          - -c
          - /opt/gitlab/embedded/bin/openssl req -newkey rsa:2048 -nodes -keyout /etc/gitlab/{{ .Values.gitlab.hostname }}.key -x509 -days 365 -out /etc/gitlab/{{ .Values.gitlab.hostname }}.crt -subj "/C=GB/ST=London/L=London/O=Container and PaaS CoP/CN={{ .Values.gitlab.hostname }}"
          volumes:
          - gitlab-ce-volume-1
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - gitlab-ce
      from:
        kind: ImageStreamTag
        name: "{{ $.Values.gitlab_app_name }}:gitlab-10.2.3"
  replicas: 1
  test: false
  selector:
    app: "{{ $.Values.gitlab_app_name }}"
    deploymentconfig: "{{ $.Values.gitlab_app_name }}"
  template:
    metadata:
      labels:
        app: "{{ $.Values.gitlab_app_name }}"
        deploymentconfig: "{{ $.Values.gitlab_app_name }}"
    spec:
      volumes:
      - name: gitlab-ce-volume-1
        persistentVolumeClaim:
          claimName: "{{ $.Values.gitlab_app_name }}-etc"
      - name: gitlab-ce-volume-2
        persistentVolumeClaim:
          claimName: "{{ $.Values.gitlab_app_name }}-data"
      containers:
      - name: gitlab-ce
        image: gitlab-ce
        ports:
        - containerPort: 22
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value:
            external_url "https://{{ .Values.gitlab.hostname }}/";
            nginx['ssl_certificate']="/etc/gitlab/${APPLICATION_HOSTNAME}.crt";
            nginx['ssl_certificate_key']="/etc/gitlab/${APPLICATION_HOSTNAME}.key";
            gitlab_rails['gitlab_https']=true;
            gitlab_rails['gitlab_port']=443;
            root_pass='${GITLAB_ROOT_PASSWORD}';
            gitlab_rails['initial_root_password']=root_pass;
            postgresql['enable']=false;
            gitlab_rails['db_host'] = '{{ $.Values.gitlab_app_name }}-postgresql';
            gitlab_rails['db_password']='{{ .Values.gitlab.db_password }}';
            gitlab_rails['db_username']='{{ .Values.gitlab.db_user }}';
            gitlab_rails['db_database']='{{ .Values.gitlab.db_name }}';
            redis['enable'] = false; gitlab_rails['redis_host']='{{ $.Values.gitlab_app_name }}-redis';
            unicorn['worker_processes'] = {{ .Values.gitlab.unicorn_count }}; manage_accounts['enable'] = true;
            manage_storage_directories['manage_etc'] = false; gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
            git_data_dirs({ 'default' => { 'path' => '/gitlab-data/git-data' } });
            gitlab_rails['shared_path'] = '/gitlab-data/shared'; gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
            gitlab_ci['builds_directory'] = '/gitlab-data/builds';
            prometheus_monitoring['enable'] = false;
{{ $ldap := (index (lookup "config.openshift.io/v1" "OAuth" "" "cluster").spec.identityProviders 0) }}
            gitlab_rails['ldap_enabled'] = true;
            gitlab_rails['ldap_servers'] = { 'main' => { 'label' => '{{ .Values.gitlab.ldap_label }}', 'host' => '{{ $ldap.ldap.url }}', 'port' => '${LDAP_PORT}', 'uid' => 'uid', 'bind_dn' => '${LDAP_BIND_DN}', 'password' => '${LDAP_PASSWORD}', 'encryption' => '${LDAP_ENCRYPTION}', 'verify_certificates' => ${LDAP_VERIFY_CERTIFICATE}, 'allow_username_or_email_login' => true, 'block_auto_created_users' => false, 'active_directory' => false, 'base' => '${LDAP_BASE}', 'user_filter' => '${LDAP_USER_FILTER}', 'attributes' => { 'username' => ['uid'], 'email' => ['mail'], 'name' => 'displayName' } } };
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: gitlab-ce-volume-1
          mountPath: "/etc/gitlab"
        - name: gitlab-ce-volume-2
          mountPath: "/gitlab-data"
        livenessProbe:
          httpGet:
            path: "/help"
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 120
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: "/help"
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccount: "{{ $.Values.gitlab_app_name }}-user"
